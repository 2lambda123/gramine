loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"

loader.argv0_override = "{{ entrypoint }}"
loader.env.LD_LIBRARY_PATH = "/lib"

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir(libc) }}" },
  { path = "/{{ entrypoint }}", uri = "file:{{ binary_dir }}/{{ entrypoint }}" },
  { path = "/dev/gramine_test_dev", uri = "dev:/dev/gramine_test_dev" },
]

sgx.nonpie_binary = true
sgx.debug = true

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir(libc) }}/",
  "file:{{ binary_dir }}/{{ entrypoint }}",
]

# for IOCTLs without an argument (or with integer argument)
sgx.ioctl_structs.gramine_test_dev_ioctl_dummy = [ ]

# three IOCTLs below test different "no struct needed" syntaxes of the `struct` key
sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_REWIND.request_code = 0x8100
sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_REWIND.struct = "gramine_test_dev_ioctl_dummy"

sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_GETSIZE.request_code = 0x8103
sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_GETSIZE.struct = ""

sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_CLEAR.request_code = 0x8104

sgx.ioctl_structs.gramine_test_dev_ioctl_write = [
    { size = 8, direction = "out", name = "buf_size" },    # buf_size
    { ptr = [ {size = "buf_size", direction = "out"} ] },  # buf
    { size = 8, direction = "inout" },                     # off
    { size = 8, direction = "in" },                        # copied
]

sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_WRITE.request_code = 0xc0208101
sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_WRITE.struct = "gramine_test_dev_ioctl_write"

sgx.ioctl_structs.gramine_test_dev_ioctl_read = [
    { size = 8, direction = "out", name = "buf_size" },   # buf_size
    { ptr = [ {size = "buf_size", direction = "in"} ] },  # buf
    { size = 8, direction = "inout" },                    # off
    { size = 8, direction = "in" },                       # copied
]

sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_READ.request_code = 0xc0208102
sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_READ.struct = "gramine_test_dev_ioctl_read"

sgx.ioctl_structs.gramine_test_dev_ioctl_replace_arr = [
    { size = 8, direction = "out", name = "replacements_cnt" },  # replacements_cnt
    { size = "replacements_cnt", ptr = [                         # replacements_arr
                                   { size = 2, direction = "out" },   # src, dst
                                   { size = 6, direction = "none" },  # pad
                                 ] },
]

sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_REPLACE_ARR.request_code = 0x40108105
sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_REPLACE_ARR.struct = "gramine_test_dev_ioctl_replace_arr"

sgx.ioctl_structs.gramine_test_dev_ioctl_replace_list = [
    { size = 2, units = 1, direction = "out" },    # src, dst; `units` is just for testing
    { size = 3, adjust = 3, direction = "none" },  # 6-byte pad; `adjust` is just for testing
    { ptr = "this" },                              # next
]

sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_REPLACE_LIST.request_code = 0x40108106
sgx.allowed_ioctls.GRAMINE_TEST_DEV_IOCTL_REPLACE_LIST.struct = "gramine_test_dev_ioctl_replace_list"
